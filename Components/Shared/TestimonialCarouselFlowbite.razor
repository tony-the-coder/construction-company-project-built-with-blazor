@* File: Components/Shared/TestimonialCarouselFlowbite.razor *@

@* Inject services if needed later for real data *@
@* @inject ITestimonialService TestimonialService *@

@if (testimonials == null || !testimonials.Any())
{
    @* Render nothing if no testimonials exist *@
}
else
{
    @* Use bg-white or bg-gray-50 for contrast, add border top/bottom *@
    <section aria-labelledby="testimonial-heading" class="bg-white py-16 sm:py-24 border-y border-subtle">
        <div class="max-w-screen-lg mx-auto px-4 sm:px-6 lg:px-8">
            @* Section Heading - Apply theme colors/fonts *@
            <div class="text-center mb-12 sm:mb-16">
                <h2 id="testimonial-heading" class="text-3xl font-bold tracking-tight text-primary sm:text-4xl font-serif">
                    What Our Clients Say
                </h2>
            </div>

            @* --- Flowbite Carousel Structure --- *@
            <div id="testimonial-carousel-@_uniqueId" class="relative w-full" data-carousel="slide">
                <!-- Carousel wrapper -->
                @* Use subtle background for the slide area, add rounding/shadow *@
                <div class="relative h-80 overflow-hidden rounded-lg md:h-[28rem] shadow-md bg-gray-50">
                    @foreach (var (testimonial, index) in testimonials.Select((item, idx) => (item, idx)))
                    {
                        <div class="@(index == 0 ? "" : "hidden") duration-700 ease-in-out" data-carousel-item>
                            <div class="absolute inset-0 flex">
                                <!-- Text Content (Left 40%) - Apply theme colors/fonts -->
                                <div class="w-full md:w-2/5 flex items-center justify-center p-6 md:p-10">
                                    <div class="text-secondary text-center md:text-left font-sans">
                                        @* Base text color/font *@
                                        <svg class="w-10 h-10 text-gray-300 dark:text-gray-600 mb-4 mx-auto md:mx-0" aria-hidden="true" fill="currentColor" viewBox="0 0 18 14">
                                            @* Lighter quote mark *@
                                            <path d="M6 0H2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3H2a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Zm10 0h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3h-1a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Z" />
                                        </svg>
                                        <p class="text-lg md:text-xl font-medium italic text-primary mb-4">"@testimonial.Quote"</p> @* Primary color for quote *@
                                        <p class="font-semibold text-primary">@testimonial.AuthorName</p> @* Primary color for author *@
                                        @if (!string.IsNullOrWhiteSpace(testimonial.ProjectDescription))
                                        {
                                            <p class="text-sm text-secondary mt-1">@testimonial.ProjectDescription</p> @* Secondary color for project desc *@
                                        }
                                    </div>
                                </div>
                                <!-- Image Content (Right 60%) -->
                                <div class="hidden md:block md:w-3/5">
                                    @if (!string.IsNullOrWhiteSpace(testimonial.ImageUrl))
                                    {
                                        <img src="@testimonial.ImageUrl" class="w-full h-full object-cover" alt="Testimonial related image for @testimonial.AuthorName">
                                    }
                                    else
                                    {
                                        @* Placeholder - Use subtle background *@
                                        <div class="w-full h-full bg-gray-100 flex items-center justify-center">
                                            <span class="text-gray-400 text-sm">(Project Image)</span>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Slider indicators - Use subtle and accent colors -->
                <div class="absolute z-30 flex -translate-x-1/2 bottom-5 left-1/2 space-x-3 rtl:space-x-reverse">
                    @for (int i = 0; i < testimonials.Count; i++)
                    {
                        <button type="button"
                                class="w-3 h-3 rounded-full bg-gray-300 hover:bg-gray-400 dark:bg-gray-600 dark:hover:bg-gray-500"
                                aria-current="@(i == 0 ? "true" : "false")"
                                aria-label="Slide @(i + 1)"
                                data-carousel-slide-to="@i">
                        </button>
                        @* Active state is usually handled by Flowbite JS adding a class, but we can't easily target that with just Tailwind. Base styling should be okay. *@
                    }
                </div>

                <!-- Slider controls - Style the buttons/icons -->
                <button type="button" class="absolute top-0 start-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-prev>
                    <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/50 dark:bg-gray-800/30 group-hover:bg-white/80 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
                        @* Use Primary Text color for arrow *@
                        <svg class="w-4 h-4 text-primary dark:text-white rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4" />
                        </svg>
                        <span class="sr-only">Previous</span>
                    </span>
                </button>
                <button type="button" class="absolute top-0 end-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-next>
                    <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/50 dark:bg-gray-800/30 group-hover:bg-white/80 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
                        @* Use Primary Text color for arrow *@
                        <svg class="w-4 h-4 text-primary dark:text-white rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4" />
                        </svg>
                        <span class="sr-only">Next</span>
                    </span>
                </button>
            </div>
            @* --- End Flowbite Carousel --- *@
        </div>
    </section>
}


@code {
    private List<Testimonial> testimonials = new();
    private string _uniqueId = Guid.NewGuid().ToString("N");

    // Class to hold testimonial data
    private class Testimonial
    {
        public string Quote { get; set; } = "";
        public string AuthorName { get; set; } = "";
        public string? ProjectDescription { get; set; }
        public string? ImageUrl { get; set; }
    }

    protected override void OnInitialized()
    {
        LoadSampleTestimonials();
        base.OnInitialized();
    }

    // Sample data (Ensure image paths in /wwwroot/images are correct)
    private void LoadSampleTestimonials()
    {
        testimonials = new List<Testimonial> {
             new Testimonial {
                 Quote = "From the initial design discussions to the final walkthrough, Lehman Custom Construction exceeded every expectation. Their attention to detail is unparalleled.",
                 AuthorName = "Sarah & Tom P.",
                 ProjectDescription = "Lakefront Modern Home",
                 ImageUrl = "/images/hero-main.jpg" // Example using the hero image
             },
             new Testimonial {
                 Quote = "The team's professionalism and communication were outstanding throughout our major renovation. We felt informed and involved every step of the way.",
                 AuthorName = "Michael B.",
                 ProjectDescription = "Historic Downtown Renovation",
                 ImageUrl = "/images/Using-this-logo-during-dev.jpg" // Example using logo
             },
             new Testimonial {
                 Quote = "Lehman didn't just build us a house; they crafted our dream home. The quality of workmanship is evident in every corner.",
                 AuthorName = "Emily R.",
                 ProjectDescription = "Custom Farmhouse Build",
                 ImageUrl = null // Example without image
             },
              new Testimonial {
                 Quote = "They handled unexpected challenges with expertise and grace, keeping the project on track. We couldn't be happier with the result.",
                 AuthorName = "David & Lisa G.",
                 ProjectDescription = "Complex Hillside Construction",
                 ImageUrl = "/images/hero-main.jpg" // Reusing image
             }
         };
    }
}